import { type NextPage } from "next";
import Head from "next/head";

// Using API instead of the standard TRPC naming
import { trpc } from "../utils/trpc";
import { useState } from "react";
import { useRouter } from "next/router"

const SubmitBuildPage: NextPage = () => {
  const createBuildMutation = trpc.builds.createBuild.useMutation()
  
  const [build, setOrder] = useState("")
  const [matchUp, setMatchUp] = useState("ZvT")
  const router = useRouter()

  async function handleSubmitBuildOrder(e: React.FormEvent) {
    e.preventDefault()
    await createBuildMutation.mutateAsync({
      matchUp,
      build
    })
    router.push("/")
  }

  return (
    <>
      <Head>
        <title>Submit a build Build</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container m-auto flex flex-col gap-8 bg-gray-800 pb-12 pt-12 text-white">
        <h1 className="text-4xl">Submit a Build Order</h1>
        <form className="flex w-full flex-col gap-4" onSubmit={handleSubmitBuildOrder}>
          <div className="flex gap-12">
            <fieldset>
              <label htmlFor="match-up-select" className="mb-2 block text-sm font-medium text-gray-900 dark:text-white">Match Up</label>

              <select 
                className="rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                value={matchUp} 
                onChange={(e) => setMatchUp(e.target.value)}
                id="match-up-select" 
                required
              >
                <option value="zvt">ZvT</option>
                <option value="zvp">ZvP</option>
                <option value="zvz">ZvZ</option>

                <option value="pvt">PvT</option>
                <option value="pvp">PvP</option>
                <option value="pvz">PvZ</option>

                <option value="tvt">TvT</option>
                <option value="tvp">TvP</option>
                <option value="tvz">TvZ</option>
              </select>
            </fieldset>
          </div>

          <div className="m-auto flex w-full gap-8">
            <fieldset className="w-3/4">
                <label
                  htmlFor="build"
                  className="mb-2 block text-sm font-medium text-gray-900 dark:text-white"
                >
                  Build Order
                </label>
              <textarea 
                required
                className="h-[400px] w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                value={build}
                onChange={(e) => setOrder(e.target.value)}
              />
            </fieldset>
          </div>
          
          <button className="mr-2 mb-2 rounded-lg bg-blue-700 px-5 py-2.5 text-sm font-medium text-white hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
            Submit
          </button>
        </form>
      </main>
    </>
  );
};

export default SubmitBuildPage;
