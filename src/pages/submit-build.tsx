import { type NextPage } from "next";
import Head from "next/head";

// Using API instead of the standard TRPC naming
import { api } from "../utils/api";
import { useState } from "react";

const SubmitBuildPage: NextPage = () => {
  const createBuildMutation = api.builds.createBuild.useMutation()
  
  const [build, setOrder] = useState("")
  const [matchUp, setMatchUp] = useState("ZvT")
  const router = useRouter()

  async function handleSubmitBuildOrder(e: React.FormEvent) {
    e.preventDefault()
    await createBuildMutation.mutateAsync({
      matchUp,
      build
    })
    router.push("/builds")
  }

  return (
    <>
      <Head>
        <title>Submit a build Build</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex gap-6 min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c] text-white">
        <h1>Submit a Build Order</h1>
        <form className="flex flex-col gap-4" onSubmit={handleSubmitBuildOrder}>
          <label htmlFor="match-up-select">Match Up</label>

          <select 
            value={matchUp} 
            onChange={e => setMatchUp(e.target.value)} 
            className="text-black" 
            id="match-up-select" 
            required
          >
            <option value="zvt">ZvT</option>
            <option value="zvp">ZvP</option>
            <option value="zvz">ZvZ</option>

            <option value="pvt">PvT</option>
            <option value="pvp">PvP</option>
            <option value="pvz">PvZ</option>

            <option value="tvt">TvT</option>
            <option value="tvp">TvP</option>
            <option value="tvz">TvZ</option>
          </select>

          <textarea 
            required
            className="p-2 text-black"
            value={build}
            onChange={(e) => setOrder(e.target.value)}
          />
          
          <button className="p-2 bg-white text-black">Submit</button>
        </form>
      </main>
    </>
  );
};

export default SubmitBuildPage;
